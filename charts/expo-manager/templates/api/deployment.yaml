---
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ printf "%s-api" (include "expo-manager.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: api
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  {{- if .Values.api.updateStrategy }}
  updateStrategy:
    {{- include "common.tplvalues.render" (dict "value" .Values.api.updateStrategy "context" $ ) | nindent 4 }}
  {{- end }}
  serviceName: {{ include "expo-manager.api.serviceNameHeadless" . | quote }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: api
        {{- if .Values.api.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.api.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.api.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.api.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "expo-manager.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "expo-manager.serviceAccountName" . }}
      {{- if .Values.api.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.api.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.api.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.api.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.api.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.api.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.api.priorityClassName }}
      priorityClassName: {{ .Values.api.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.api.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.api.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.api.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.api.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.api.initContainers }}
      initContainers: {{- include "common.tplvalues.render" (dict "value" .Values.api.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: api
          image: {{ include "expo-manager.api.image" . | quote }}
          env:
            - name: API_PORT
              value: {{ .Values.api.service.port | quote }}
            - name: NODE_ENV
              value: {{ .Values.environment | quote }}
            - name: APM_ENABLED
              value: {{ .Values.apm.enabled | quote }}
            - name: APM_SERVER_NAME
              value: {{ .Values.apm.server | quote }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "expo-manager.secretName" . }}
                  key: {{ include "expo-manager.jwtSecret.secretKey" . }}
            - name: EMAIL_SENDER_ADDRESS
              value: {{ .Values.email.senderAddress | quote }}
            - name: EMAIL_SENDER_NAME
              value: {{ .Values.email.senderName | quote }}
            - name: EMAIL_SENDER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "expo-manager.secretName" . }}
                  key: {{ include "expo-manager.emailSenderPassword.secretKey" . }}
            - name: EMAIL_SENDER_SERVER
              value: {{ .Values.email.server | quote }}
            - name: EMAIL_BCC
              value: {{ .Values.email.bcc | quote }}
            - name: EMAIL_SUBJECT
              value: {{ .Values.email.subject | quote }}
            - name: CHECKOUT_TEXT_FR
              value: {{ .Values.checkout.text.fr | quote }}
            - name: CHECKOUT_TEXT_NL
              value: {{ .Values.checkout.text.nl | quote }}
            - name: CHECKOUT_TEXT_EN
              value: {{ .Values.checkout.text.en | quote }}
            - name: CHECKOUT_ENTITY
              value: {{ .Values.checkout.entity | quote }}
            - name: DEBUG
              value: {{ .Values.debug | quote }}
            - name: INITIAL_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "expo-manager.secretName" . }}
                  key: {{ include "expo-manager.initialUser.secretKey" . }}
              #value: {{ .Values.initialUserPassword | quote }}
            - name: EXPOSITION_ID
              value: {{ .Values.exposition.id | quote }}
            - name: EXPOSITION_NAME
              value: {{ .Values.exposition.name | quote }}
            - name: EXPOSITION_DESCRIPTION
              value: {{ .Values.exposition.description | quote }}
            - name: EXPOSITION_LOGO
              value: {{ .Values.exposition.logo | quote }}
            - name: RETHINKDB_NAME
              value: {{ .Values.rethinkdbName | quote }}
            - name: RETHINKDB_HOST
              value: {{ printf "%s-proxy" (include "rethinkdb.fullname" .) }}
            - name: RETHINKDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "rethinkdb.secretName" . }}
                  key: rethinkdb-password
            {{- if .Values.api.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.api.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-envvars" (include "expo-manager.fullname" .) }}
            {{- if .Values.api.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.api.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.api.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.api.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          {{- if .Values.api.resources }}
          resources: {{- toYaml .Values.api.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.api.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.api.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /
              port: http
          {{- end }}
          {{- if .Values.api.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.api.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /
              port: http
          {{- end }}
          {{- if .Values.api.readinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.api.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /
              port: http
          {{- end }}
          {{- if .Values.api.persistence.enabled }}
          volumeMounts:
            - name: reports
              mountPath: /expo/reports
          {{- end }}
      volumes:
        {{- if .Values.api.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.api.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
  {{- if not .Values.api.persistence.enabled }}
        - name: reports
          emptyDir: {}
  {{- else if .Values.api.persistence.existingClaim }}
        - name: reports
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.api.persistence.existingClaim .) }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: reports
        labels: {{- include "common.labels.standard" . | nindent 10 }}
          app.kubernetes.io/component: api
          {{- if .Values.api.persistence.labels }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.api.persistence.labels "context" $ ) | nindent 10 }}
          {{- end }}
          {{- if .Values.commonLabels }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 10 }}
          {{- end }}
        {{- if or .Values.api.persistence.annotations .Values.commonAnnotations }}
        annotations:
          {{- if .Values.api.persistence.annotations }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.api.persistence.annotations "context" $ ) | nindent 10 }}
          {{- end }}
          {{- if .Values.commonAnnotations }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 10 }}
          {{- end }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.api.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.api.persistence.size | quote }}
        {{- if .Values.api.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.api.persistence.selector "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.api.persistence.dataSource }}
        dataSource: {{- include "common.tplvalues.render" (dict "value" .Values.api.persistence.dataSource "context" $) | nindent 10 }}
        {{- end }}
        {{- include "common.storage.class" (dict "persistence" .Values.api.persistence "global" .Values.global) | nindent 8 }}
  {{- end }}
